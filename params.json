{
  "name": "Realize",
  "tagline": "A Golang build system with file watchers, live reload and output streams.",
  "body": "[![GoDoc](https://img.shields.io/badge/documentation-godoc-blue.svg)](https://godoc.org/github.com/tockins/realize/realize)\r\n[![TeamCity CodeBetter](https://img.shields.io/teamcity/codebetter/bt428.svg?maxAge=2592000?style=flat-square)](https://travis-ci.org/tockins/realize)\r\n[![AUR](https://img.shields.io/aur/license/yaourt.svg?maxAge=2592000?style=flat-square)](https://raw.githubusercontent.com/tockins/realize/v1/LICENSE)\r\n[![](https://img.shields.io/badge/realize-examples-yellow.svg)](https://github.com/tockins/realize-examples)\r\n[![Join the chat at https://gitter.im/tockins/realize](https://badges.gitter.im/tockins/realize.svg)](https://gitter.im/tockins/realize?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nA Golang build system with file watchers, output streams and live reload. Run, build and watch file changes with custom paths\r\n\r\n#### Features\r\n\r\n- Build, Install, Test, Fmt and Run at the same time\r\n- Live reload on file changes (re-build, re-install and re-run)\r\n- Watch custom paths\r\n- Watch specific file extensions\r\n- Multiple projects support\r\n- Output streams\r\n- Execution times\r\n- Highly customizable\r\n- Fast run \r\n\r\n#### Installation and usage\r\n\r\n- Run this to get/install:\r\n\r\n    ```\r\n    $ go get github.com/tockins/realize\r\n    ```\r\n    \r\n- From project/projects root execute:\r\n\r\n    ```\r\n    $ realize add \r\n    ```\r\n   \r\n    It will create a realize.config.yaml file if it doesn't exist already and adds the working directory as the project.\r\n    \r\n    Otherwise if a config file already exists it adds another project to the existing config file.\r\n    \r\n    The add command supports the following custom parameters: \r\n    \r\n    ```\r\n    --name=\"Project Name\"  -> Name, if not specified takes the working directory name\r\n    --path=\"server\"        -> Base Path, if not specified takes the working directory name    \r\n    --build                -> Enables the build   \r\n    --nobin                -> Disables the installation\r\n    --norun                -> Disables the run\r\n    --nofmt                -> Disables the fmt (go fmt) \r\n    ```\r\n    Examples:\r\n\r\n    ```\r\n    $ realize add\r\n    ``` \r\n    ```\r\n    $ realize add --path=\"mypath\"\r\n    ```   \r\n    ```\r\n    $ realize add --name=\"My Project\" --build\r\n    ```    \r\n    ```\r\n    $ realize add --name=\"My Project\" --path=\"/projects/package\" --build\r\n    ```    \r\n    ```\r\n    $ realize add --name=\"My Project\" --path=\"projects/package\" --build --norun\r\n    ```\r\n- Remove a project by its name\r\n\r\n    ```\r\n    $ realize remove --name=\"Project Name\"\r\n    ```\r\n- Lists all projects\r\n\r\n    ```\r\n    $ realize list\r\n    ```\r\n- Build, Run and watch file changes. Realize will re-build and re-run your projects on each change.\r\n\r\n    ```\r\n    $ realize run \r\n    ```\r\n    \r\n    Fast run launches a project from its working directory without a config file \r\n    \r\n    ```\r\n    $ realize fast\r\n    ```\r\n    \r\n     The fast command supports the following custom parameters: \r\n    \r\n    ```\r\n    --build                -> Enables the build   \r\n    --nobin                -> Disables the installation\r\n    --norun                -> Disables the run\r\n    --nofmt                -> Disables the fmt (go fmt) \r\n    --config               -> Take the defined settings if exist a config file  \r\n    ```    \r\n\r\n#### Config file example\r\n\r\n- For more examples check [Realize Examples](https://github.com/tockins/realize-examples)\r\n     \r\n     ```\r\n    version: \"1.0\"\r\n    projects:\r\n        - app_name: App One     -> name\r\n          app_path: one         -> root path\r\n          app_run: true         -> enable/disable go run (require app_bin)\r\n          app_bin: true         -> enable/disable go install\r\n          app_build: false      -> enable/disable go build\r\n          app_fmt: true         -> enable/disable go fmt\r\n          app_watcher:\r\n            preview: true       -> prints the observed files on startup\r\n            paths:              -> paths to observe for live reload\r\n            - /\r\n            ignore_paths:       -> paths to ignore\r\n            - vendor\r\n            - bin\r\n            exts:               -> file extensions to observe for live reload\r\n            - .go\r\n        - app_name: App Two     -> another project\r\n          app_path: two\r\n          app_run: true\r\n          app_build: true\r\n          app_bin: true\r\n          app_watcher:\r\n            paths:\r\n            - /\r\n            ignore_paths:\r\n            - vendor\r\n            - bin\r\n            exts:\r\n            - .go \r\n    ```                    \r\n\r\n#### Next releases\r\n\r\n#####Milestone 1.0\r\n\r\n- [x] Cli start, remove, add, list, run\r\n- [x] Remove duplicate projects\r\n- [x] Support for multiple projects\r\n- [x] Watcher files preview\r\n- [x] Support for directories with duplicates names\r\n- [ ] Go test support\r\n- [x] Go fmt support\r\n- [x] Cli fast run\r\n- [x] Execution times for build/install \r\n- [x] Go doc\r\n- [x] Support for server start/stop \r\n- [x] Stream projects output\r\n- [x] Cli feedback\r\n\r\n##### Milestone 1.1\r\n- [ ] Test under windows\r\n- [ ] Unit test\r\n\r\n\r\n#### Contacts\r\n\r\n- Chat with us [Gitter](https://gitter.im/tockins/realize)\r\n\r\n- [Alessio Pracchia](https://www.linkedin.com/in/alessio-pracchia-38a70673)\r\n- [Daniele Conventi](https://www.linkedin.com/in/daniele-conventi-b419b0a4)\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}