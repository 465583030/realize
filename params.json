{
  "name": "Realize",
  "tagline": "A Golang build system with file watchers, live reload and output streams.",
  "body": "## Realize\r\n\r\n![Logo](http://i.imgur.com/8nr2s1b.jpg)\r\n\r\nA Go build system with file watchers, output streams and live reload. Run, build and watch file changes with custom paths\r\n\r\n![Preview](http://i.imgur.com/dJbNZjt.gif)\r\n\r\n#### What's new\r\n\r\n##### v1.1\r\n- [ ] Windows support - **Moved to 1.2**\r\n- [x] Custom paths for the commands fast/add\r\n- [x] Save output on a file\r\n- [x] Before/After fields enabled\r\n- [x] Web panel in material design (localhost:5000)\r\n\r\n\r\n#### Features\r\n\r\n- Build, Install, Test, Fmt and Run at the same time\r\n- Live reload on file changes (re-build, re-install and re-run)\r\n- Watch custom paths\r\n- Watch specific file extensions\r\n- Multiple projects support\r\n- Output streams\r\n- Execution times\r\n- Highly customizable\r\n- Fast run\r\n\r\n#### Installation and usage\r\n\r\n- Run this to get/install:\r\n\r\n    ```\r\n    $ go get github.com/tockins/realize\r\n    ```\r\n\r\n- From project/projects root execute:\r\n\r\n    ```\r\n    $ realize add\r\n    ```\r\n\r\n    It will create a realize.config.yaml file if it doesn't exist already and adds the working directory as the project.\r\n\r\n    Otherwise if a config file already exists it adds another project to the existing config file.\r\n\r\n    The add command supports the following custom parameters:\r\n\r\n    ```\r\n    --name=\"Project Name\"   -> Name, if not specified takes the working directory name\r\n    --path=\"server\"         -> Custom Path, if not specified takes the working directory name    \r\n    --build                 -> Enables the build   \r\n    --test                  -> Enables the tests  \r\n    --no-bin                -> Disables the installation\r\n    --no-run                -> Disables the run\r\n    --no-fmt                -> Disables the fmt (go fmt)\r\n    --no-server             -> Disables the web panel (port :5000)\r\n    ```\r\n    Examples:\r\n\r\n    ```\r\n    $ realize add\r\n\r\n    $ realize add --path=\"mypath\"\r\n\r\n    $ realize add --name=\"My Project\" --build\r\n\r\n    $ realize add --name=\"My Project\" --path=\"/projects/package\" --build\r\n\r\n    $ realize add --name=\"My Project\" --path=\"projects/package\" --build --no-run\r\n    \r\n    $ realize add --path=\"/Users/alessio/go/src/github.com/tockins/realize-examples/coin/\"\r\n    ```\r\n\r\n    If you want, you can specify additional arguments for your project.\r\n\r\n     **The additional arguments must go after the options of \"Realize\"**\r\n\r\n    ```\r\n    $ realize add --path=\"/print/printer\" --no-run yourParams --yourFlags // correct\r\n\r\n    $ realize add yourParams --yourFlags --path=\"/print/printer\" --no-run // wrong\r\n    ```\r\n\r\n- Remove a project by its name\r\n\r\n    ```\r\n    $ realize remove --name=\"Project Name\"\r\n    ```\r\n- Lists all projects\r\n\r\n    ```\r\n    $ realize list\r\n    ```\r\n- Build, Run and watch file changes. Realize will re-build and re-run your projects on each change.\r\n\r\n    ```\r\n    $ realize run\r\n    ```\r\n\r\n    Fast run launches a project from its working directory without a config file\r\n\r\n    ```\r\n    $ realize fast\r\n    ```\r\n\r\n    The fast command supports the following custom parameters:\r\n\r\n    ```\r\n    --path=\"server\"         -> Custom Path, if not specified takes the working directory name \r\n    --build                 -> Enables the build   \r\n    --test                  -> Enables the tests   \r\n    --config                -> Take the defined settings if exist a config file  \r\n    --no-bin                -> Disables the installation\r\n    --no-run                -> Disables the run\r\n    --no-fmt                -> Disables the fmt (go fmt)\r\n    --no-server             -> Disables the web panel (port :5000)\r\n    ```  \r\n    The \"fast\" command supports addittional arguments as the \"add\" command.\r\n\r\n    ```\r\n    $ realize fast --no-run yourParams --yourFlags // correct\r\n\r\n    $ realize fast yourParams --yourFlags --no-run // wrong\r\n    \r\n    $ realize fast --path=\"/Users/alessio/go/src/github.com/tockins/realize-examples/coin/\"\r\n    ```  \r\n\r\n\r\n#### Color reference\r\n\r\n- Blue: outputs of the project\r\n- Red: errors\r\n- Magenta: times or changed files\r\n- Green: successfully completed action\r\n\r\n\r\n#### Config file example\r\n\r\n- For more examples check [Realize Examples](https://github.com/tockins/realize-examples)\r\n\r\n     ```\r\n    projects:\r\n        - app_name: App One     -> name\r\n          app_path: one         -> root path\r\n          app_run: true         -> enable/disable go run (require app_bin)\r\n          app_bin: true         -> enable/disable go install\r\n          app_build: false      -> enable/disable go build\r\n          app_fmt: true         -> enable/disable go fmt\r\n          app_test: true        -> enable/disable go test\r\n          app_params:           -> the project will be launched with these parameters\r\n            - --flag1\r\n            - param1\r\n          app_watcher:\r\n            preview: true       -> prints the observed files on startup\r\n            paths:              -> paths to observe for live reload\r\n            - /\r\n            ignore_paths:       -> paths to ignore\r\n            - vendor\r\n            - bin\r\n            exts:               -> file extensions to observe for live reload\r\n            - .go\r\n            output:             -> enable/disable the output destinations \r\n                  cli: true         -> cli output\r\n                  file: true        -> creates an output file inside the project \r\n            \r\n    ```                    \r\n\r\n#### Next release\r\n\r\n##### v1.2\r\n- [ ] Windows support \r\n- [ ] Go generate support\r\n\r\n#### Contacts\r\n\r\n- Chat with us [Gitter](https://gitter.im/tockins/realize)\r\n\r\n- [Alessio Pracchia](https://www.linkedin.com/in/alessio-pracchia-38a70673)\r\n- [Daniele Conventi](https://www.linkedin.com/in/conventi)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}